FROM nvidia/cuda:10.1-cudnn7-devel

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y \
	ca-certificates python3-dev git wget nginx sudo  \
	cmake ninja-build protobuf-compiler libprotobuf-dev && \
  rm -rf /var/lib/apt/lists/*
RUN ln -sv /usr/bin/python3 /usr/bin/python

# # create a non-root user # remove this part?
# # ARG USER_ID=1000
# # RUN useradd -m --no-log-init --system  --uid ${USER_ID} appuser -g sudo
# # RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
# # USER appuser
# WORKDIR /home/appuser

# # need to put train command HERE
ENV PATH="/home/appuser/.local/bin:${PATH}"
RUN wget https://bootstrap.pypa.io/get-pip.py && \
	python3 get-pip.py && \
	rm get-pip.py

# # install dependencies
# # See https://pytorch.org/ for other options if you use a different version of CUDA # remove user options --user
RUN pip install tensorboard cython boto3 numpy==1.15.4 gevent flask pathlib gunicorn tqdm  requests six ipdb h5py html2text nltk progressbar onnxruntime sagemaker sagemaker_inference pycocotools git+https://github.com/NVIDIA/dllogger
RUN pip install torch==1.5+cu101 torchvision==0.6+cu101 -f https://download.pytorch.org/whl/torch_stable.html
RUN pip install 'git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI'
RUN pip install 'git+https://github.com/facebookresearch/fvcore'

# # RUN pip install --upgrade --no-cache-dir pip \
# #  && pip install --no-cache-dir \

# # install detectron2
# #RUN git clone https://github.com/facebookresearch/detectron2 detectron2_repo
COPY detectron2 detectron2_repo

# # set FORCE_CUDA because during `docker build` cuda is not accessible
ENV FORCE_CUDA="1"
# # This will by default build detectron2 for all common cuda architectures and take a lot more time,
# # because inside `docker build`, there is no way to tell which architecture will be used.
ARG TORCH_CUDA_ARCH_LIST="Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing"
ENV TORCH_CUDA_ARCH_LIST="${TORCH_CUDA_ARCH_LIST}"

RUN pip install -e detectron2_repo

# # Set a fixed model cache directory.
# # COPY serve /home/appuser/.local/bin/serve
# # COPY train /home/appuser/.local/bin/train
# # COPY wsgi.py /home/appuser/detectron2_repo/wsgi.py
# # COPY nginx.conf /home/appuser/detectron2_repo/nginx.conf
COPY predictor.py /home/appuser/detectron2_repo/predictor.py
COPY predict_coco.py /home/appuser/detectron2_repo/predict_coco.py
COPY d2_deserializer.py /home/appuser/detectron2_repo/d2_deserializer.py
COPY model_final.pth /opt/ml/model/model_final.pth
COPY model_final.pth /home/appuser/detectron2_repo/model_final.pth


ENV FVCORE_CACHE="/tmp"
WORKDIR /home/appuser/detectron2_repo

# run detectron2 under user "appuser":
# wget http://images.cocodataset.org/val2017/000000439715.jpg -O input.jpg
# python3 demo/demo.py  \
	#--config-file configs/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x.yaml \
	#--input input.jpg --output outputs/ \
	#--opts MODEL.WEIGHTS detectron2://COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl